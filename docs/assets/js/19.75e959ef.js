(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{10:function(t,e,a){"use strict";function s(t,e,a,s,n,r,o,i){var p,c="function"==typeof t?t.options:t;if(e&&(c.render=e,c.staticRenderFns=a,c._compiled=!0),s&&(c.functional=!0),r&&(c._scopeId="data-v-"+r),o?(p=function(t){(t=t||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(t=__VUE_SSR_CONTEXT__),n&&n.call(this,t),t&&t._registeredComponents&&t._registeredComponents.add(o)},c._ssrRegister=p):n&&(p=i?function(){n.call(this,this.$root.$options.shadowRoot)}:n),p)if(c.functional){c._injectStyles=p;var l=c.render;c.render=function(t,e){return p.call(e),l(t,e)}}else{var v=c.beforeCreate;c.beforeCreate=v?[].concat(v,p):[p]}return{exports:t,options:c}}a.d(e,"a",(function(){return s}))},212:function(t,e,a){"use strict";a.r(e);var s=a(10),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("Transporter needs a Serializer Module which serializes & deserializes the transferable data.\nThe default Serializer is the "),a("code",[t._v("JsonSerializer")]),t._v(" but there are several built-in Serializers\ncan convert messages into MessagePack, BSON, CBOR, SMILE, Amazon ION or other binary formats.")]),t._v(" "),a("h2",{attrs:{id:"json-serializer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#json-serializer"}},[t._v("#")]),t._v(" JSON Serializer")]),t._v(" "),a("p",[t._v("This is the built-in default Serializer.\nIt serializes the packets to JSON string and deserializes the received JSON bytes to "),a("code",[t._v("Tree")]),t._v(" objects.\nThe performance of JSON Serializers in Java and JavaScript is very good,\nJSON serialization is usually faster than most binary Serializers.\nThis Serializer is compatible with the JavaScript/Go version of Moleculer.")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NatsTransporter")]),t._v(" transporter "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NatsTransporter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nats://nats.server:4222"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Do not have to set it because this is the default")]),t._v("\ntransporter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSerializer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JsonSerializer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServiceBroker")]),t._v(" broker "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ServiceBroker")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("builder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nodeID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"server-1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("transporter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("transporter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jackson,boon"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("writers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jackson,fast"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("The "),a("code",[t._v("readers")]),t._v(" and "),a("code",[t._v("writers")]),t._v(" parameters are used to specify the JSON API\nto be used by Moleculer for deserialization / serialization.\nThis is important if you have multiple JSON implementations on the classpath.\nSeveral implementations can be specified in order of importance, separated by commas.\nIf not specified, ServiceBroker will automatically try to choose the fastest JSON API.\nThe values of the "),a("code",[t._v("readers")]),t._v(" and "),a("code",[t._v("writers")]),t._v(" parameters are listed below:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Reader/writer ID")]),t._v(" "),a("th",[t._v("JSON API and Dependency")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v('"boon"')]),t._v(" "),a("td",[a("a",{attrs:{href:"https://mvnrepository.com/artifact/io.fastjson/boon",target:"_blank",rel:"noopener noreferrer"}},[t._v("Boon JSON API"),a("OutboundLink")],1)])]),t._v(" "),a("tr",[a("td",[t._v('"bson"')]),t._v(" "),a("td",[a("a",{attrs:{href:"https://mvnrepository.com/artifact/org.mongodb/bson",target:"_blank",rel:"noopener noreferrer"}},[t._v("BSON (MongoDB)"),a("OutboundLink")],1)])]),t._v(" "),a("tr",[a("td",[t._v('"dsl"')]),t._v(" "),a("td",[a("a",{attrs:{href:"https://mvnrepository.com/artifact/com.dslplatform/dsl-json",target:"_blank",rel:"noopener noreferrer"}},[t._v("DSLJson"),a("OutboundLink")],1)])]),t._v(" "),a("tr",[a("td",[t._v('"fast"')]),t._v(" "),a("td",[a("a",{attrs:{href:"https://mvnrepository.com/artifact/com.alibaba/fastjson",target:"_blank",rel:"noopener noreferrer"}},[t._v("FastJson"),a("OutboundLink")],1)])]),t._v(" "),a("tr",[a("td",[t._v('"flex"')]),t._v(" "),a("td",[a("a",{attrs:{href:"https://mvnrepository.com/artifact/net.sf.flexjson/flexjson",target:"_blank",rel:"noopener noreferrer"}},[t._v("Flexjson"),a("OutboundLink")],1)])]),t._v(" "),a("tr",[a("td",[t._v('"genson"')]),t._v(" "),a("td",[a("a",{attrs:{href:"https://mvnrepository.com/artifact/com.owlike/genson",target:"_blank",rel:"noopener noreferrer"}},[t._v("Genson"),a("OutboundLink")],1)])]),t._v(" "),a("tr",[a("td",[t._v('"gson"')]),t._v(" "),a("td",[a("a",{attrs:{href:"https://mvnrepository.com/artifact/com.google.code.gson/gson",target:"_blank",rel:"noopener noreferrer"}},[t._v("Google Gson"),a("OutboundLink")],1)])]),t._v(" "),a("tr",[a("td",[t._v('"jackson"')]),t._v(" "),a("td",[a("a",{attrs:{href:"https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind",target:"_blank",rel:"noopener noreferrer"}},[t._v("Jackson JSON"),a("OutboundLink")],1)])]),t._v(" "),a("tr",[a("td",[t._v('"jodd"')]),t._v(" "),a("td",[a("a",{attrs:{href:"https://mvnrepository.com/artifact/org.jodd/jodd-json",target:"_blank",rel:"noopener noreferrer"}},[t._v("Jodd Json"),a("OutboundLink")],1)])]),t._v(" "),a("tr",[a("td",[t._v('"johnzon"')]),t._v(" "),a("td",[a("a",{attrs:{href:"https://mvnrepository.com/artifact/org.apache.johnzon/johnzon-normalMapper",target:"_blank",rel:"noopener noreferrer"}},[t._v("Apache Johnzon"),a("OutboundLink")],1)])]),t._v(" "),a("tr",[a("td",[t._v('"jsonio"')]),t._v(" "),a("td",[a("a",{attrs:{href:"https://mvnrepository.com/artifact/com.cedarsoftware/json-io",target:"_blank",rel:"noopener noreferrer"}},[t._v("JsonIO"),a("OutboundLink")],1)])]),t._v(" "),a("tr",[a("td",[t._v('"nano"')]),t._v(" "),a("td",[a("a",{attrs:{href:"https://mvnrepository.com/artifact/com.grack/nanojson",target:"_blank",rel:"noopener noreferrer"}},[t._v("NanoJson"),a("OutboundLink")],1)])]),t._v(" "),a("tr",[a("td",[t._v('"simple"')]),t._v(" "),a("td",[a("a",{attrs:{href:"https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple",target:"_blank",rel:"noopener noreferrer"}},[t._v("JSON.simple"),a("OutboundLink")],1)])]),t._v(" "),a("tr",[a("td",[t._v('"smart"')]),t._v(" "),a("td",[a("a",{attrs:{href:"https://mvnrepository.com/artifact/net.minidev/json-smart",target:"_blank",rel:"noopener noreferrer"}},[t._v("Json-smart"),a("OutboundLink")],1)])]),t._v(" "),a("tr",[a("td",[t._v('"sojo"')]),t._v(" "),a("td",[a("a",{attrs:{href:"https://mvnrepository.com/artifact/net.sf.sojo/sojo",target:"_blank",rel:"noopener noreferrer"}},[t._v("SOJO"),a("OutboundLink")],1)])]),t._v(" "),a("tr",[a("td",[t._v('"util"')]),t._v(" "),a("td",[a("a",{attrs:{href:"https://mvnrepository.com/artifact/org.kopitubruk.util/JSONUtil",target:"_blank",rel:"noopener noreferrer"}},[t._v("JsonUtil"),a("OutboundLink")],1)])]),t._v(" "),a("tr",[a("td",[t._v('"ion"')]),t._v(" "),a("td",[a("a",{attrs:{href:"https://mvnrepository.com/artifact/software.amazon.ion/ion-java",target:"_blank",rel:"noopener noreferrer"}},[t._v("Amazon Ion"),a("OutboundLink")],1)])]),t._v(" "),a("tr",[a("td",[t._v('"builtin"')]),t._v(" "),a("td",[t._v("Built-in JSON parser (no dependencies)")])])])]),t._v(" "),a("p",[t._v('So, for example, if you want to use a "FastJSON" implementation,\nput the implementation reference in the "dependencies" block of the (build.gradle or pom.xml) build script,\nthen set '),a("code",[t._v("readers")]),t._v(" and "),a("code",[t._v("writers")]),t._v(' to "fast". To verify, type "info" command into the REPL console.\nThe "info" command will display the current Moleculer configuration, including the the JSON API which is in use.')]),t._v(" "),a("h2",{attrs:{id:"messagepack-serializer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#messagepack-serializer"}},[t._v("#")]),t._v(" MessagePack Serializer")]),t._v(" "),a("p",[t._v("Built-in "),a("a",{attrs:{href:"https://msgpack.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("MsgPack"),a("OutboundLink")],1),t._v(" Serializer.\nMessagePack is an efficient binary serialization format. It lets you exchange\ndata among multiple languages like JSON. But it's smaller. Small\nintegers are encoded into a single byte, and typical short strings require\nonly one extra byte in addition to the strings themselves. This Serializer is\ncompatible with the JavaScript version of Moleculer.")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("transporter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSerializer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MsgPackSerializer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("::: details Dependencies\nTo use MessagePack Serializer, add the following dependency to the build script:"),a("br"),t._v("\ngroup: 'org.msgpack', name: 'msgpack', version: '0.6.12'\n:::")]),t._v(" "),a("h2",{attrs:{id:"bson-serializer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bson-serializer"}},[t._v("#")]),t._v(" BSON Serializer")]),t._v(" "),a("p",[t._v("Built-in "),a("a",{attrs:{href:"http://bsonspec.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("BSON"),a("OutboundLink")],1),t._v(" Serializer.\nBSON, short for Binary JSON, is a binary-encoded serialization of JSON-like documents.\nLike JSON, BSON supports the embedding of documents and arrays within other documents and arrays.")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("transporter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSerializer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BsonSerializer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("::: details Dependencies\nTo use BSON Serializer, add the following dependency to the build script:"),a("br"),t._v("\ngroup: 'de.undercouch', name: 'bson4jackson', version: '2.9.2'\n:::")]),t._v(" "),a("h2",{attrs:{id:"cbor-serializer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cbor-serializer"}},[t._v("#")]),t._v(" CBOR Serializer")]),t._v(" "),a("p",[t._v("Built-in "),a("a",{attrs:{href:"https://cbor.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("CBOR"),a("OutboundLink")],1),t._v(" Serializer.\nCBOR is based on the wildly successful JSON data model: numbers, strings,\narrays, maps (called objects in JSON), and a few values such as false, true,\nand null.")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("transporter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSerializer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CborSerializer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("::: details Dependencies\nTo use CBOR Serializer, add the following dependency to the build script:"),a("br"),t._v("\ngroup: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-cbor', version: '2.10.0'\n:::")]),t._v(" "),a("h2",{attrs:{id:"amazon-ion-serializer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#amazon-ion-serializer"}},[t._v("#")]),t._v(" Amazon ION Serializer")]),t._v(" "),a("p",[t._v("Built-in "),a("a",{attrs:{href:"http://amzn.github.io/ion-docs/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ION"),a("OutboundLink")],1),t._v(" Serializer.\nAmazon Ion is a richly-typed, self-describing, hierarchical data\nserialization format offering interchangeable binary and text\nrepresentations. The binary representation is efficient to store, transmit,\nand skip-scan parse.")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("transporter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSerializer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IonSerializer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("::: details Dependencies\nTo use ION Serializer, add the following dependency to the build script:"),a("br"),t._v("\ngroup: 'software.amazon.ion', name: 'ion-java', version: '1.5.1'\n:::")]),t._v(" "),a("h2",{attrs:{id:"smile-serializer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#smile-serializer"}},[t._v("#")]),t._v(" SMILE Serializer")]),t._v(" "),a("p",[t._v("Built-in "),a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Smile_(data_interchange_format)",target:"_blank",rel:"noopener noreferrer"}},[t._v("SMILE"),a("OutboundLink")],1),t._v(" Serializer.\nSMILE is a computer data interchange format based on JSON. It can also be\nconsidered as a binary serialization of generic JSON data model, which means\nthat tools that operate on JSON may be used with SMILE as well, as long as\nproper encoder/decoder exists for tool to use. Compared to JSON, SMILE is\nboth more compact and more efficient to process.")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("transporter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSerializer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SmileSerializer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("::: details Dependencies\nTo use SMILE Serializer, add the following dependency to the build script:"),a("br"),t._v("\ngroup: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-smile', version: '2.10.0'\n:::")]),t._v(" "),a("h2",{attrs:{id:"custom-serializer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#custom-serializer"}},[t._v("#")]),t._v(" Custom Serializer")]),t._v(" "),a("p",[t._v("Custom Serializer module can be created.\nTo make your own Serializer, you need to derive it from the "),a("code",[t._v("services.moleculer.serializer.Serializer")]),t._v("\nsuperclass, and implement the "),a("code",[t._v("write")]),t._v(" and "),a("code",[t._v("read")]),t._v(" methods.")]),t._v(" "),a("p",[t._v("Create custom Serializer:")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomSerializer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Serializer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// --- SERIALIZE TREE TO BYTE ARRAY ---")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Tree")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" content "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("asObject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Write Java Object into byte array...")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// The "content" is "java.util.Map" or "java.util.List".')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// --- DESERIALIZE BYTE ARRAY TO TREE ---")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Tree")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("read")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" source"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" content "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Read Java Object from "source"...')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CheckedTree")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Use custom Serializer:")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("transporter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSerializer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomSerializer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);