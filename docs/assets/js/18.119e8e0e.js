(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{216:function(t,e,s){"use strict";s.r(e);var a=s(0),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"moleculer-logging-basics"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#moleculer-logging-basics"}},[t._v("#")]),t._v(" Moleculer logging basics")]),t._v(" "),s("p",[t._v("Moleculer uses "),s("a",{attrs:{href:"https://www.slf4j.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("SLF4J"),s("OutboundLink")],1),t._v(" for logging.\nEach\n"),s("router-link",{attrs:{to:"/services.html#about-moleculer-services"}},[t._v("Service")]),t._v(",\n"),s("router-link",{attrs:{to:"/middlewares.html#about-middlewares"}},[t._v("Middleware")]),t._v(" and\n"),s("router-link",{attrs:{to:"/moleculer-web.html#http-middlewares"}},[t._v("HttpMiddleware")]),t._v('\ninstance inherits its own "logger" instance from the superclass.\nHere is a short example showcasing how you can access the logger:')],1),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v("Â ")]),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stereotype")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Controller")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("services"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("moleculer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("service")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("*"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Controller")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Math")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Service")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/**\n     * The "math.add" Action.\n     */')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Action")]),t._v(" add "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ctx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Log request - the "logger" instance was made by superclass')]),t._v("\n        logger"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Request received: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Calculate response")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" ctx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"dependencies"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dependencies"}},[t._v("#")]),t._v(" Dependencies")]),t._v(" "),s("p",[t._v("The APIs used by Moleculer Framework use multiple logging implementations (eg. Apache Commons Logging, Log4j, JDK logging).\nIt is advisable to redirect all of them to the JDK logger as this will work with standalone (Netty-based) runtime and within J2EE servers.\nTo do this, add the following dependencies to the build file:")]),t._v(" "),s("div",{staticClass:"language-gradle extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("dependencies {\n\n    implementation group: 'org.slf4j', name: 'slf4j-api',        version: '1.7.30'\n    implementation group: 'org.slf4j', name: 'slf4j-jdk14',      version: '1.7.30'\n    implementation group: 'org.slf4j', name: 'log4j-over-slf4j', version: '1.7.30'\n    implementation group: 'org.slf4j', name: 'jcl-over-slf4j',   version: '1.7.30'\n\n    // ...other dependencies...\n\n}\n")])])]),s("h2",{attrs:{id:"logging-in-standalone-runtime-mode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#logging-in-standalone-runtime-mode"}},[t._v("#")]),t._v(" Logging in standalone runtime mode")]),t._v(" "),s("p",[t._v('When running standalone mode (on top of Netty Server), you need to set the "logging.config" parameter to something like this:')]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('java -Dlogging.config="classpath:logging.properties"\n     -cp <list of JARs>\n     services.moleculer.config.MoleculerRunner <app class>\n')])])]),s("p",[s("a",{attrs:{href:"https://github.com/moleculer-java/moleculer-spring-boot-demo/blob/master/installer/bin/development-start.bat",target:"_blank",rel:"noopener noreferrer"}},[t._v('Example of a BAT file that starts in "development" stage'),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("By default, Moleculer uses "),s("code",[t._v("services.moleculer.logger.AsyncFileLogger")]),t._v(" to write log files in standalone mode.\nThis logger writes files from a "),s("strong",[t._v("separate Thread")]),t._v(" and creates a "),s("strong",[t._v("new file every day")]),t._v(".\nIt can "),s("strong",[t._v("compress")]),t._v(" and/or "),s("strong",[t._v("delete")]),t._v(' old log files (see the "compressAfter" and "deleteAfter" properties).\nSetting the "logToConsole" parameter to "true" writes a '),s("strong",[t._v("colored")]),t._v(" log to "),s("code",[t._v("System.out")]),t._v("\n(optional "),s("a",{attrs:{href:"https://mvnrepository.com/artifact/com.diogonunes/JCDP/2.0.3.1",target:"_blank",rel:"noopener noreferrer"}},[t._v("dependency of colored output"),s("OutboundLink")],1),t._v(')\nIn the "production" stage, the "logToConsole" parameter should be set to "false",\nwhile in the "development" stage it should be set to "true":')]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("handlers                                                = services.moleculer.logger.AsyncFileLogger\nservices.moleculer.logger.AsyncFileLogger.directory     = log\nservices.moleculer.logger.AsyncFileLogger.prefix        = moleculer.\nservices.moleculer.logger.AsyncFileLogger.encoding      = UTF8\nservices.moleculer.logger.AsyncFileLogger.compressAfter = 30 days\nservices.moleculer.logger.AsyncFileLogger.deleteAfter   = 365 days\nservices.moleculer.logger.AsyncFileLogger.logToConsole  = true\nservices.moleculer.logger.AsyncFileLogger.level         = INFO\n.level                                                  = INFO\n")])])]),s("h2",{attrs:{id:"logging-in-j2ee-environment"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#logging-in-j2ee-environment"}},[t._v("#")]),t._v(" Logging in J2EE environment")]),t._v(" "),s("p",[t._v('When using Spring Boot, the logger is mostly J2EE\'s own logger, but this is optional.\nYou can turn off the initialization of Spring Boot logging,\nby setting the "org.springframework.boot.logging.LoggingSystem" property to "none".\nThus, the Moleculer Application will use the J2EE server\'s default logging mechanism.\nIn "web.xml" it looks like this:')]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v("Â ")]),s("br"),s("br"),s("br"),s("br"),s("br"),s("br"),s("br")]),s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token prolog"}},[t._v('<?xml version="1.0" encoding="UTF-8"?>')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("web-app")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("xmlns")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://java.sun.com/xml/ns/javaee"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Moleculer Servlet"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("servlet-class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("services.moleculer.web.servlet.MoleculerServlet"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet-class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- USE THE J2EE SERVER'S LOGGING SYSTEM --\x3e")]),t._v("\n                \n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("init-param")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("param-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("-Dorg.springframework.boot.logging.LoggingSystem"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("param-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("param-value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("none"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("param-value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("init-param")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        ...\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("servlet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("web-app")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[s("a",{attrs:{href:"https://github.com/moleculer-java/moleculer-spring-boot-demo/blob/master/src/main/webapp/WEB-INF/web.xml",target:"_blank",rel:"noopener noreferrer"}},[t._v("Example of complete web.xml"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"detailed-example"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#detailed-example"}},[t._v("#")]),t._v(" Detailed Example")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://moleculer-java.github.io/moleculer-spring-boot-demo/",target:"_blank",rel:"noopener noreferrer"}},[t._v("This demo project"),s("OutboundLink")],1),t._v("\ndemonstrating some of the capabilities of Moleculer.\nIn the project, logging is set to both runtime modes (J2EE and Netty).\nThe project can be imported into the Eclipse IDE or IntelliJ IDEA.")])])}),[],!1,null,null,null);e.default=n.exports}}]);